
import company.Game;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.Calendar;
import java.util.GregorianCalendar;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Yerel Kullanıcı
 */
public class UserSelections_jFrame extends javax.swing.JFrame {
  
    public static int troopNumber = 0;
    public static int moveTroopNumber = 0;
    
    /**
     * Creates new form UserSelections_jFrame
     */
    public UserSelections_jFrame() {
        initComponents();
        
        warning1.setVisible(false);
        warning2.setVisible(false);
        
        moveTargetLabel.setVisible(false);
        
        decrease_button1.setVisible(false);
        
        recruitTroopNum_text1.setVisible(false);
        
        increase_button1.setVisible(false);
        
        moveTargetLabel.setEnabled(false);
        
        decrease_button1.setEnabled(false);
        
        recruitTroopNum_text1.setEnabled(false);
        
        increase_button1.setEnabled(false);
        
        moveTarget1.setVisible(false);
        moveTarget2.setVisible(false);
        moveTarget3.setVisible(false);
        moveTarget4.setVisible(false);
        moveTarget5.setVisible(false);
        moveTarget6.setVisible(false);
        
        moveTarget1.setEnabled(false);
        moveTarget2.setEnabled(false);
        moveTarget3.setEnabled(false);
        moveTarget4.setEnabled(false);
        moveTarget5.setEnabled(false);
        moveTarget6.setEnabled(false);
        
        confirm_button.setEnabled(false);
        confirm_button.setVisible(false);
        
        warning3.setVisible(false);
        warning4.setVisible(false);
        
        setBounds(260, 100, 1322, 800);
        
        setResizable(false);
        
        attackTarget1.setEnabled(false);
        attackTarget2.setEnabled(false);
        attackTarget3.setEnabled(false);
        attackTarget4.setEnabled(false);
        attackTarget5.setEnabled(false);
        attackTarget6.setEnabled(false);
        
        attackTarget1.setVisible(false);
        attackTarget2.setVisible(false);
        attackTarget3.setVisible(false);
        attackTarget4.setVisible(false);
        attackTarget5.setVisible(false);
        attackTarget6.setVisible(false);     
        
        if(NewGame_jFrame.booleanArr[0] == true)
        {
            attack_button.setEnabled(false);
            move_button.setEnabled(false);  
        }
        if(NewGame_jFrame.booleanArr[0] == true && NewGame_jFrame.booleanArr[1] == true && NewGame_jFrame.booleanArr[2] == true)
        {
            recruit_button.setEnabled(true);
            attack_button.setEnabled(true);
            move_button.setEnabled(true); 
        }
        
        setTroopsText(NewGame_jFrame.selectedLandID);
        setOwnerId(NewGame_jFrame.selectedLandID);
    } 
    
    public void close(){
        WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    
    public static void setTroopsText(int ID)
    {
        String str = "" + Game.world[ID].getTroopsOnLand();
        troopsOnLand_text.setText(str);
    }
    
    public static void setOwnerId(int ID)
    {
        if(Game.world[ID].getOwnerID() == -1)
            owner_text.setText("Unclaimed");
        else{
            String str = "Player " + (Game.world[ID].getOwnerID()+1);
            owner_text.setText(str);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateCorner_label = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        Back_button = new javax.swing.JButton();
        attackTarget2 = new javax.swing.JButton();
        attackTarget3 = new javax.swing.JButton();
        attackTarget5 = new javax.swing.JButton();
        attackTarget4 = new javax.swing.JButton();
        warning2 = new javax.swing.JLabel();
        warning1 = new javax.swing.JLabel();
        attackTarget6 = new javax.swing.JButton();
        attackTarget1 = new javax.swing.JButton();
        increase_button = new javax.swing.JButton();
        decrease_button = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        moveTarget2 = new javax.swing.JButton();
        moveTarget3 = new javax.swing.JButton();
        moveTarget4 = new javax.swing.JButton();
        moveTarget5 = new javax.swing.JButton();
        moveTarget6 = new javax.swing.JButton();
        recruitTroopNum_text = new javax.swing.JLabel();
        owner_text = new javax.swing.JLabel();
        troopsOnLand_text = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        endTurn_button = new javax.swing.JButton();
        attack_button = new javax.swing.JButton();
        recruit_button = new javax.swing.JButton();
        move_button = new javax.swing.JButton();
        decrease_button1 = new javax.swing.JButton();
        recruitTroopNum_text1 = new javax.swing.JLabel();
        increase_button1 = new javax.swing.JButton();
        moveTarget1 = new javax.swing.JButton();
        confirm_button = new javax.swing.JButton();
        moveTargetLabel = new javax.swing.JLabel();
        warning3 = new javax.swing.JLabel();
        warning4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        dateCorner_label.setFont(new java.awt.Font("Viner Hand ITC", 3, 24)); // NOI18N
        dateCorner_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dateCorner_label.setText("Date");
        dateCorner_label.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        dateCorner_label.setPreferredSize(new java.awt.Dimension(70, 33));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(610, 470, 690, 10);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(610, 230, 690, 10);

        Back_button.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Back_button.setForeground(new java.awt.Color(204, 204, 204));
        Back_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back_icon_axe.png"))); // NOI18N
        Back_button.setText("BACK");
        Back_button.setContentAreaFilled(false);
        Back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(Back_button);
        Back_button.setBounds(1110, 700, 160, 80);

        attackTarget2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackTarget2ActionPerformed(evt);
            }
        });
        getContentPane().add(attackTarget2);
        attackTarget2.setBounds(1120, 280, 140, 30);

        attackTarget3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackTarget3ActionPerformed(evt);
            }
        });
        getContentPane().add(attackTarget3);
        attackTarget3.setBounds(960, 320, 140, 30);

        attackTarget5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackTarget5ActionPerformed(evt);
            }
        });
        getContentPane().add(attackTarget5);
        attackTarget5.setBounds(960, 360, 140, 30);

        attackTarget4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackTarget4ActionPerformed(evt);
            }
        });
        getContentPane().add(attackTarget4);
        attackTarget4.setBounds(1120, 320, 140, 30);

        warning2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        warning2.setForeground(new java.awt.Color(204, 204, 204));
        warning2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        warning2.setText("YOU CANNOT ATTACK ANY OTHER LAND WITH 1 TROOP");
        getContentPane().add(warning2);
        warning2.setBounds(960, 340, 300, 50);

        warning1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        warning1.setForeground(new java.awt.Color(204, 204, 204));
        warning1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        warning1.setText("YOU HAVE ONLY 1 TROOP ON THIS LAND, ");
        getContentPane().add(warning1);
        warning1.setBounds(960, 280, 300, 50);

        attackTarget6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackTarget6ActionPerformed(evt);
            }
        });
        getContentPane().add(attackTarget6);
        attackTarget6.setBounds(1120, 360, 140, 30);

        attackTarget1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackTarget1ActionPerformed(evt);
            }
        });
        getContentPane().add(attackTarget1);
        attackTarget1.setBounds(960, 280, 140, 30);

        increase_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/up_arrow.png"))); // NOI18N
        increase_button.setContentAreaFilled(false);
        increase_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increase_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(increase_button);
        increase_button.setBounds(1170, 90, 30, 30);

        decrease_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/down_arrow.png"))); // NOI18N
        decrease_button.setContentAreaFilled(false);
        decrease_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrease_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(decrease_button);
        decrease_button.setBounds(1010, 90, 30, 30);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attack_wallpaper.jpg"))); // NOI18N
        jLabel10.setText("jLabel2");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(660, 270, 280, 170);

        moveTarget2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveTarget2ActionPerformed(evt);
            }
        });
        getContentPane().add(moveTarget2);
        moveTarget2.setBounds(1120, 520, 140, 30);

        moveTarget3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveTarget3ActionPerformed(evt);
            }
        });
        getContentPane().add(moveTarget3);
        moveTarget3.setBounds(960, 560, 140, 30);

        moveTarget4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveTarget4ActionPerformed(evt);
            }
        });
        getContentPane().add(moveTarget4);
        moveTarget4.setBounds(1120, 560, 140, 30);

        moveTarget5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveTarget5ActionPerformed(evt);
            }
        });
        getContentPane().add(moveTarget5);
        moveTarget5.setBounds(960, 600, 140, 30);

        moveTarget6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveTarget6ActionPerformed(evt);
            }
        });
        getContentPane().add(moveTarget6);
        moveTarget6.setBounds(1120, 600, 140, 30);

        recruitTroopNum_text.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        recruitTroopNum_text.setForeground(new java.awt.Color(255, 255, 255));
        recruitTroopNum_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        recruitTroopNum_text.setText("0");
        recruitTroopNum_text.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(recruitTroopNum_text);
        recruitTroopNum_text.setBounds(1080, 90, 50, 30);

        owner_text.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        owner_text.setForeground(new java.awt.Color(255, 255, 255));
        owner_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        owner_text.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(owner_text);
        owner_text.setBounds(390, 40, 130, 40);

        troopsOnLand_text.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        troopsOnLand_text.setForeground(new java.awt.Color(255, 255, 255));
        troopsOnLand_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        troopsOnLand_text.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(troopsOnLand_text);
        troopsOnLand_text.setBounds(420, 90, 80, 40);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Owner:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(310, 50, 90, 20);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Troops on land:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(310, 100, 90, 20);

        jLabel3.setText("jLabel3");
        jLabel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel3);
        jLabel3.setBounds(280, 30, 250, 110);

        endTurn_button.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        endTurn_button.setForeground(new java.awt.Color(0, 102, 0));
        endTurn_button.setText("End Turn");
        endTurn_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endTurn_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(endTurn_button);
        endTurn_button.setBounds(920, 710, 150, 60);

        attack_button.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        attack_button.setForeground(new java.awt.Color(0, 102, 0));
        attack_button.setText("Attack");
        attack_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attack_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(attack_button);
        attack_button.setBounds(1050, 400, 110, 40);

        recruit_button.setBackground(new java.awt.Color(153, 153, 153));
        recruit_button.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        recruit_button.setForeground(new java.awt.Color(0, 102, 0));
        recruit_button.setText("Recruit");
        recruit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recruit_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(recruit_button);
        recruit_button.setBounds(1050, 160, 110, 40);

        move_button.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        move_button.setForeground(new java.awt.Color(0, 102, 0));
        move_button.setText("Move");
        move_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                move_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(move_button);
        move_button.setBounds(1050, 640, 110, 40);

        decrease_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/down_arrow.png"))); // NOI18N
        decrease_button1.setContentAreaFilled(false);
        decrease_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrease_button1ActionPerformed(evt);
            }
        });
        getContentPane().add(decrease_button1);
        decrease_button1.setBounds(1010, 580, 30, 30);

        recruitTroopNum_text1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        recruitTroopNum_text1.setForeground(new java.awt.Color(255, 255, 255));
        recruitTroopNum_text1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        recruitTroopNum_text1.setText("0");
        recruitTroopNum_text1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(recruitTroopNum_text1);
        recruitTroopNum_text1.setBounds(1080, 580, 50, 30);

        increase_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/up_arrow.png"))); // NOI18N
        increase_button1.setContentAreaFilled(false);
        increase_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increase_button1ActionPerformed(evt);
            }
        });
        getContentPane().add(increase_button1);
        increase_button1.setBounds(1170, 580, 30, 30);

        moveTarget1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveTarget1ActionPerformed(evt);
            }
        });
        getContentPane().add(moveTarget1);
        moveTarget1.setBounds(960, 520, 140, 30);

        confirm_button.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        confirm_button.setForeground(new java.awt.Color(0, 102, 0));
        confirm_button.setText("confirm");
        confirm_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirm_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(confirm_button);
        confirm_button.setBounds(1050, 640, 110, 40);

        moveTargetLabel.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        moveTargetLabel.setForeground(new java.awt.Color(0, 102, 0));
        moveTargetLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(moveTargetLabel);
        moveTargetLabel.setBounds(1010, 530, 190, 40);

        warning3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        warning3.setForeground(new java.awt.Color(204, 204, 204));
        warning3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        warning3.setText("YOU HAVE ONLY 1 TROOP ON THIS LAND, ");
        getContentPane().add(warning3);
        warning3.setBounds(960, 520, 300, 50);

        warning4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        warning4.setForeground(new java.awt.Color(204, 204, 204));
        warning4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        warning4.setText("YOU CANNOT MOVE ANY OTHER LAND WITH 1 TROOP");
        getContentPane().add(warning4);
        warning4.setBounds(960, 580, 300, 50);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movee.jpg"))); // NOI18N
        jLabel8.setText("jLabel2");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(660, 510, 280, 170);

        jLabel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel9);
        jLabel9.setBounds(650, 500, 620, 190);

        jLabel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel7);
        jLabel7.setBounds(650, 260, 620, 190);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recruit_wallpaper.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(660, 40, 280, 160);

        jLabel6.setText("jLabel6");
        jLabel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(650, 30, 620, 180);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userSelections_background.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1322, 800);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void recruit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recruit_buttonActionPerformed
        
        if(!recruitTroopNum_text.getText().equals("0"))
        {
            warning1.setVisible(false);
            warning2.setVisible(false);

            Game.menu1.recruit(Game.world[MainMenu_jFrame.newGame.selectedLandID], Game.players[Game.turn_count%Game.player_count], troopNumber);
            troopNumber = 0;
            MainMenu_jFrame.newGame.booleanArr[0] = false; MainMenu_jFrame.newGame.booleanArr[1] = false; MainMenu_jFrame.newGame.booleanArr[2] = false;      

            War_jFrame.updateAll();

            NewGame_jFrame.soundOn();
            
            MainMenu_jFrame.newGame.setVisible(true);  

            close();
        }
    }//GEN-LAST:event_recruit_buttonActionPerformed

    private void endTurn_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endTurn_buttonActionPerformed
        warning1.setVisible(false);
        warning2.setVisible(false);
        
        Game.turn_count++;
        if(Game.turn_count > Game.player_count-1)
        Game.players[Game.turn_count%Game.player_count].setTroops(3);

        
        MainMenu_jFrame.newGame.setStatistics();
        MainMenu_jFrame.newGame.setTurnCount();
        
                NewGame_jFrame.epidemicSoundOff();
                
        
        if((Game.turn_count % 4) == 0){
            MainMenu_jFrame.newGame.map.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snoww.gif"))); 
            NewGame_jFrame.winterSoundOn();
            Game.players[Game.turn_count%Game.player_count].setTroops(-1);
        }else{
            NewGame_jFrame.winterSoundOff();
            NewGame_jFrame.soundOnn();
            
            int a = (int)(5.0*Math.random()) + 1;
            if(a == 3){
                NewGame_jFrame.soundOff();
                MainMenu_jFrame.newGame.map.setIcon(new javax.swing.ImageIcon(getClass().getResource("/epidemiccc.gif")));
                NewGame_jFrame.epidemicSoundOn();
                Game.players[Game.turn_count%Game.player_count].setTroops(-3);
            }else{
                NewGame_jFrame.epidemicSoundOff();
                MainMenu_jFrame.newGame.map.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newMapp.jpg")));
            }
        }
        
        if(Game.players[Game.turn_count%Game.player_count].getArrayList().isEmpty()) {
            // win screen
        }
        
        MainMenu_jFrame.newGame.setVisible(true);
    
        close();
    }//GEN-LAST:event_endTurn_buttonActionPerformed

    private void increase_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increase_buttonActionPerformed
        if(troopNumber < Game.players[Game.turn_count%Game.player_count].getTroops())
        {
            troopNumber++;
            String str = "" + troopNumber;
            recruitTroopNum_text.setText(str);
        }      
    }//GEN-LAST:event_increase_buttonActionPerformed

    private void decrease_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrease_buttonActionPerformed
        if(troopNumber > 0)
        {
            troopNumber--;
            String str = "" + troopNumber;
            recruitTroopNum_text.setText(str);
        }     
    }//GEN-LAST:event_decrease_buttonActionPerformed

    private void attack_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attack_buttonActionPerformed
        if(Game.menu1.selectLand("" + NewGame_jFrame.selectedLandID).getTroopsOnLand() > 1){
            attack_button.setEnabled(false);
        
            String inputStr = "";

            for(int i = 0; i < Game.world[NewGame_jFrame.selectedLandID].getNeighbor().length(); i++)
            {
                if(Game.world[NewGame_jFrame.selectedLandID].getNeighbor().charAt(i) != ',')
                {
                    inputStr += Game.world[NewGame_jFrame.selectedLandID].getNeighbor().charAt(i);
                }
                else if(Game.world[NewGame_jFrame.selectedLandID].getNeighbor().charAt(i) == ',')
                {
                    String str = "" + NewGame_jFrame.selectedLandID;
                    if(Game.menu1.selectLand(str).getOwnerID() != -1)
                    {
                        if(attackTarget1.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() != Game.menu1.selectLand(str).getOwnerID())
                        {                    
                            attackTarget1.setVisible(true);
                            attackTarget1.setEnabled(true);
                            attackTarget1.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }

                        else if(attackTarget2.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() != Game.menu1.selectLand(str).getOwnerID())
                        {
                            attackTarget2.setVisible(true);
                            attackTarget2.setEnabled(true);
                            attackTarget2.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }

                        else if(attackTarget3.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() != Game.menu1.selectLand(str).getOwnerID())
                        {
                            attackTarget3.setVisible(true);
                            attackTarget3.setEnabled(true);
                            attackTarget3.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }

                        else if(attackTarget4.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() != Game.menu1.selectLand(str).getOwnerID())
                        {
                            attackTarget4.setVisible(true);
                            attackTarget4.setEnabled(true);
                            attackTarget4.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }

                        else if(attackTarget5.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() != Game.menu1.selectLand(str).getOwnerID())
                        {
                            attackTarget5.setVisible(true);
                            attackTarget5.setEnabled(true);
                            attackTarget5.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }

                        else if(attackTarget6.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() != Game.menu1.selectLand(str).getOwnerID())
                        {
                            attackTarget6.setVisible(true);
                            attackTarget6.setEnabled(true);
                            attackTarget6.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }
                    }
                    inputStr = "";
                }
            }
        }else{
            warning1.setVisible(true);
            warning2.setVisible(true);
        }
        
        
    }//GEN-LAST:event_attack_buttonActionPerformed

    private void attackTarget1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackTarget1ActionPerformed
        War_jFrame war = new War_jFrame();
        
        String str = "" + NewGame_jFrame.selectedLandID;
        
        War_jFrame.attackerTroops.setText("" + (Game.menu1.selectLand(str).getTroopsOnLand() - 1));
        War_jFrame.defenderTroops.setText("" + Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget1.getText()).getTroopsOnLand());
        
        boolean returnValue = Game.menu1.attack(Game.players[Game.turn_count%Game.player_count] ,Game.menu1.selectLand(str) ,Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget1.getText()));
    
        war.defenderInfo.setText(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget1.getText()).getLandName());
        
        MainMenu_jFrame.newGame.defenderLandID = Integer.parseInt(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget1.getText()).getLandID());
        
        war.attackerInfo.setText(Game.menu1.selectLand(str).getLandName());
        
        if(returnValue == false)
        {
            war.WarResult_text.setText("Defeat");
        }else
        {
            war.WarResult_text.setText("Victory");
        }
        
        
        
        war.setVisible(true);
        
        close();
    }//GEN-LAST:event_attackTarget1ActionPerformed

    private void attackTarget2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackTarget2ActionPerformed
        War_jFrame war = new War_jFrame();
        
        String str = "" + NewGame_jFrame.selectedLandID;
        boolean returnValue = Game.menu1.attack(Game.players[Game.turn_count%Game.player_count], Game.menu1.selectLand(str), Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget2.getText()));
    
        war.defenderInfo.setText(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget2.getText()).getLandName());
        
        MainMenu_jFrame.newGame.defenderLandID = Integer.parseInt(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget1.getText()).getLandName());
        
        war.attackerInfo.setText(Game.menu1.selectLand(str).getLandName());
        
        if(returnValue == false)
        {
            war.WarResult_text.setText("Defeat");
        }else
        {
            war.WarResult_text.setText("Victory");
        }
        
        war.setVisible(true);
        
        close();
    }//GEN-LAST:event_attackTarget2ActionPerformed

    private void attackTarget3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackTarget3ActionPerformed
        War_jFrame war = new War_jFrame();
        
        String str = "" + NewGame_jFrame.selectedLandID;
        boolean returnValue = Game.menu1.attack(Game.players[Game.turn_count%Game.player_count] , Game.menu1.selectLand(str), Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget2.getText()));
    
        war.defenderInfo.setText(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget3.getText()).getLandName());
        
        MainMenu_jFrame.newGame.defenderLandID = Integer.parseInt(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget1.getText()).getLandName());
        
        war.attackerInfo.setText(Game.menu1.selectLand(str).getLandName());
        
        if(returnValue == false)
        {
            war.WarResult_text.setText("Defeat");
        }else
        {
            war.WarResult_text.setText("Victory");
        }

        war.setVisible(true);
        
        close();
    }//GEN-LAST:event_attackTarget3ActionPerformed

    private void attackTarget4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackTarget4ActionPerformed
        War_jFrame war = new War_jFrame();
        
        String str = "" + NewGame_jFrame.selectedLandID;
        boolean returnValue = Game.menu1.attack(Game.players[Game.turn_count%Game.player_count] , Game.menu1.selectLand(str), Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget2.getText()));
    
        war.defenderInfo.setText(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget4.getText()).getLandName());

        MainMenu_jFrame.newGame.defenderLandID = Integer.parseInt(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget1.getText()).getLandName());
        
        war.attackerInfo.setText(Game.menu1.selectLand(str).getLandName());
        
        if(returnValue == false)
        {
            war.WarResult_text.setText("Defeat");
        }else
        {
            war.WarResult_text.setText("Victory");
        }
       
        war.setVisible(true);
        
        close();
    }//GEN-LAST:event_attackTarget4ActionPerformed

    private void attackTarget5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackTarget5ActionPerformed
        War_jFrame war = new War_jFrame();
        
        String str = "" + NewGame_jFrame.selectedLandID;
        boolean returnValue = Game.menu1.attack(Game.players[Game.turn_count%Game.player_count], Game.menu1.selectLand(str), Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget2.getText()));
    
        war.defenderInfo.setText(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget5.getText()).getLandName());
        
        MainMenu_jFrame.newGame.defenderLandID = Integer.parseInt(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget1.getText()).getLandName());
        
        war.attackerInfo.setText(Game.menu1.selectLand(str).getLandName());
        
        if(returnValue == false)
        {
            war.WarResult_text.setText("Defeat");
        }else
        {
            war.WarResult_text.setText("Victory");
        }
     
        war.setVisible(true);
        
        close();
    }//GEN-LAST:event_attackTarget5ActionPerformed

    private void attackTarget6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackTarget6ActionPerformed
        War_jFrame war = new War_jFrame();
        
        String str = "" + NewGame_jFrame.selectedLandID;
        boolean returnValue = Game.menu1.attack(Game.players[Game.turn_count%Game.player_count] , Game.menu1.selectLand(str), Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget2.getText()));
    
        war.defenderInfo.setText(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget6.getText()).getLandName());
        
        MainMenu_jFrame.newGame.defenderLandID = Integer.parseInt(Game.menu1.selectLandbyName(UserSelections_jFrame.attackTarget1.getText()).getLandName());
        
        war.attackerInfo.setText(Game.menu1.selectLand(str).getLandName());
        
        if(returnValue == false)
        {
            war.WarResult_text.setText("Defeat");
        }else
        {
            war.WarResult_text.setText("Victory");
        }
      
        war.setVisible(true);
        
        close();
    }//GEN-LAST:event_attackTarget6ActionPerformed

    private void Back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_buttonActionPerformed
        NewGame_jFrame.soundOn();

        warning1.setVisible(false);
        warning2.setVisible(false);

        MainMenu_jFrame.newGame.setVisible(true);

        close();
    }//GEN-LAST:event_Back_buttonActionPerformed

    private void move_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_move_buttonActionPerformed
        if(Game.menu1.selectLand("" + NewGame_jFrame.selectedLandID).getTroopsOnLand() > 1){
            move_button.setEnabled(false);
        
            String inputStr = "";

            for(int i = 0; i < Game.world[NewGame_jFrame.selectedLandID].getNeighbor().length(); i++)
            {
                if(Game.world[NewGame_jFrame.selectedLandID].getNeighbor().charAt(i) != ',')
                {
                    inputStr += Game.world[NewGame_jFrame.selectedLandID].getNeighbor().charAt(i);
                }
                else if(Game.world[NewGame_jFrame.selectedLandID].getNeighbor().charAt(i) == ',')
                {
                    String str = "" + NewGame_jFrame.selectedLandID;
                    if(Game.menu1.selectLand(str).getOwnerID() != -1)
                    {
                        if(moveTarget1.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() == Game.menu1.selectLand(str).getOwnerID())
                        {                    
                            moveTarget1.setVisible(true);
                            moveTarget1.setEnabled(true);
                            moveTarget1.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }

                        else if(moveTarget2.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() == Game.menu1.selectLand(str).getOwnerID())
                        {
                            moveTarget2.setVisible(true);
                            moveTarget2.setEnabled(true);
                            moveTarget2.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }

                        else if(moveTarget3.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() == Game.menu1.selectLand(str).getOwnerID())
                        {
                            moveTarget3.setVisible(true);
                            moveTarget3.setEnabled(true);
                            moveTarget3.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }

                        else if(moveTarget4.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() == Game.menu1.selectLand(str).getOwnerID())
                        {
                            moveTarget4.setVisible(true);
                            moveTarget4.setEnabled(true);
                            moveTarget4.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }

                        else if(moveTarget5.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() == Game.menu1.selectLand(str).getOwnerID())
                        {
                            moveTarget5.setVisible(true);
                            moveTarget5.setEnabled(true);
                            moveTarget5.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }

                        else if(moveTarget6.isEnabled() == false && Game.menu1.selectLand(inputStr).getOwnerID() != -1 && Game.menu1.selectLand(inputStr).getOwnerID() == Game.menu1.selectLand(str).getOwnerID())
                        {
                            moveTarget6.setVisible(true);
                            moveTarget6.setEnabled(true);
                            moveTarget6.setText(Game.menu1.selectLand(inputStr).getLandName());
                        }
                    }
                    inputStr = "";
                }
            }
        }else{
            warning3.setVisible(true);
            warning4.setVisible(true);
        }
    }//GEN-LAST:event_move_buttonActionPerformed

    private void moveTarget2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveTarget2ActionPerformed
        moveTarget1.setVisible(false);
        moveTarget2.setVisible(false);
        moveTarget3.setVisible(false);
        moveTarget4.setVisible(false);
        moveTarget5.setVisible(false);
        moveTarget6.setVisible(false);
        
        moveTarget1.setEnabled(false);
        moveTarget2.setEnabled(false);
        moveTarget3.setEnabled(false);
        moveTarget4.setEnabled(false);
        moveTarget5.setEnabled(false);
        moveTarget6.setEnabled(false);
        
        move_button.setEnabled(false);
        move_button.setVisible(false);
        
        moveTargetLabel.setText(moveTarget2.getText());
        
        moveTargetLabel.setVisible(true);
        
        decrease_button1.setVisible(true);
        
        recruitTroopNum_text1.setVisible(true);
        
        increase_button1.setVisible(true);
        
        moveTargetLabel.setEnabled(true);
        
        decrease_button1.setEnabled(true);
        
        recruitTroopNum_text1.setEnabled(true);
        
        increase_button1.setEnabled(true);
    }//GEN-LAST:event_moveTarget2ActionPerformed

    private void moveTarget3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveTarget3ActionPerformed
        moveTarget1.setVisible(false);
        moveTarget2.setVisible(false);
        moveTarget3.setVisible(false);
        moveTarget4.setVisible(false);
        moveTarget5.setVisible(false);
        moveTarget6.setVisible(false);
        
        moveTarget1.setEnabled(false);
        moveTarget2.setEnabled(false);
        moveTarget3.setEnabled(false);
        moveTarget4.setEnabled(false);
        moveTarget5.setEnabled(false);
        moveTarget6.setEnabled(false);
        
        move_button.setEnabled(false);
        move_button.setVisible(false);
        
        moveTargetLabel.setText(moveTarget3.getText());
        
        moveTargetLabel.setVisible(true);
        
        decrease_button1.setVisible(true);
        
        recruitTroopNum_text1.setVisible(true);
        
        increase_button1.setVisible(true);
        
        moveTargetLabel.setEnabled(true);
        
        decrease_button1.setEnabled(true);
        
        recruitTroopNum_text1.setEnabled(true);
        
        increase_button1.setEnabled(true);
    }//GEN-LAST:event_moveTarget3ActionPerformed

    private void moveTarget4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveTarget4ActionPerformed
        moveTarget1.setVisible(false);
        moveTarget2.setVisible(false);
        moveTarget3.setVisible(false);
        moveTarget4.setVisible(false);
        moveTarget5.setVisible(false);
        moveTarget6.setVisible(false);
        
        moveTarget1.setEnabled(false);
        moveTarget2.setEnabled(false);
        moveTarget3.setEnabled(false);
        moveTarget4.setEnabled(false);
        moveTarget5.setEnabled(false);
        moveTarget6.setEnabled(false);
        
        move_button.setEnabled(false);
        move_button.setVisible(false);
        
        moveTargetLabel.setText(moveTarget4.getText());
        
        moveTargetLabel.setVisible(true);
        
        decrease_button1.setVisible(true);
        
        recruitTroopNum_text1.setVisible(true);
        
        increase_button1.setVisible(true);
        
        moveTargetLabel.setEnabled(true);
        
        decrease_button1.setEnabled(true);
        
        recruitTroopNum_text1.setEnabled(true);
        
        increase_button1.setEnabled(true);
    }//GEN-LAST:event_moveTarget4ActionPerformed

    private void moveTarget5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveTarget5ActionPerformed
        moveTarget1.setVisible(false);
        moveTarget2.setVisible(false);
        moveTarget3.setVisible(false);
        moveTarget4.setVisible(false);
        moveTarget5.setVisible(false);
        moveTarget6.setVisible(false);
        
        moveTarget1.setEnabled(false);
        moveTarget2.setEnabled(false);
        moveTarget3.setEnabled(false);
        moveTarget4.setEnabled(false);
        moveTarget5.setEnabled(false);
        moveTarget6.setEnabled(false);
        
        move_button.setEnabled(false);
        move_button.setVisible(false);
        
        moveTargetLabel.setText(moveTarget5.getText());
        
        moveTargetLabel.setVisible(true);
        
        decrease_button1.setVisible(true);
        
        recruitTroopNum_text1.setVisible(true);
        
        increase_button1.setVisible(true);
        
        moveTargetLabel.setEnabled(true);
        
        decrease_button1.setEnabled(true);
        
        recruitTroopNum_text1.setEnabled(true);
        
        increase_button1.setEnabled(true);
    }//GEN-LAST:event_moveTarget5ActionPerformed

    private void moveTarget6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveTarget6ActionPerformed
        moveTarget1.setVisible(false);
        moveTarget2.setVisible(false);
        moveTarget3.setVisible(false);
        moveTarget4.setVisible(false);
        moveTarget5.setVisible(false);
        moveTarget6.setVisible(false);
        
        moveTarget1.setEnabled(false);
        moveTarget2.setEnabled(false);
        moveTarget3.setEnabled(false);
        moveTarget4.setEnabled(false);
        moveTarget5.setEnabled(false);
        moveTarget6.setEnabled(false);
        
        move_button.setEnabled(false);
        move_button.setVisible(false);
        
        moveTargetLabel.setText(moveTarget6.getText());
        
        moveTargetLabel.setVisible(true);
        
        decrease_button1.setVisible(true);
        
        recruitTroopNum_text1.setVisible(true);
        
        increase_button1.setVisible(true);
        
        moveTargetLabel.setEnabled(true);
        
        decrease_button1.setEnabled(true);
        
        recruitTroopNum_text1.setEnabled(true);
        
        increase_button1.setEnabled(true);
    }//GEN-LAST:event_moveTarget6ActionPerformed

    private void decrease_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrease_button1ActionPerformed
        if(moveTroopNumber > 0)
        {
            moveTroopNumber--;
            String str = "" + moveTroopNumber;
            recruitTroopNum_text1.setText(str);
        }   
    }//GEN-LAST:event_decrease_button1ActionPerformed

    private void increase_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increase_button1ActionPerformed
        if(moveTroopNumber < Game.world[NewGame_jFrame.selectedLandID].getTroopsOnLand() - 1)
        {
            moveTroopNumber++;
            String str = "" + moveTroopNumber;
            recruitTroopNum_text1.setText(str);
        }      
    }//GEN-LAST:event_increase_button1ActionPerformed

    private void moveTarget1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveTarget1ActionPerformed
        moveTarget1.setVisible(false);
        moveTarget2.setVisible(false);
        moveTarget3.setVisible(false);
        moveTarget4.setVisible(false);
        moveTarget5.setVisible(false);
        moveTarget6.setVisible(false);
        
        moveTarget1.setEnabled(false);
        moveTarget2.setEnabled(false);
        moveTarget3.setEnabled(false);
        moveTarget4.setEnabled(false);
        moveTarget5.setEnabled(false);
        moveTarget6.setEnabled(false);
        
        moveTargetLabel.setText(moveTarget1.getText());
        
        move_button.setEnabled(false);
        move_button.setVisible(false);
        
        moveTargetLabel.setVisible(true);
        
        decrease_button1.setVisible(true);
        
        recruitTroopNum_text1.setVisible(true);
        
        increase_button1.setVisible(true);
        
        moveTargetLabel.setEnabled(true);
        
        decrease_button1.setEnabled(true);
        
        recruitTroopNum_text1.setEnabled(true);
        
        increase_button1.setEnabled(true);
        
        confirm_button.setEnabled(true);
        confirm_button.setVisible(true);
    }//GEN-LAST:event_moveTarget1ActionPerformed

    private void confirm_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirm_buttonActionPerformed
        Game.menu1.move(Game.players[Game.turn_count%Game.player_count],Game.world[MainMenu_jFrame.newGame.selectedLandID],Game.menu1.selectLandbyName(moveTargetLabel.getText()),Integer.parseInt(recruitTroopNum_text1.getText()));
        
        War_jFrame.updateAll();
        
        NewGame_jFrame.soundOn();
            
        MainMenu_jFrame.newGame.setVisible(true);  

        close();
    }//GEN-LAST:event_confirm_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserSelections_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserSelections_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserSelections_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserSelections_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserSelections_jFrame().setVisible(true);
            }
        });
    }
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back_button;
    public static javax.swing.JButton attackTarget1;
    public static javax.swing.JButton attackTarget2;
    public static javax.swing.JButton attackTarget3;
    public static javax.swing.JButton attackTarget4;
    public static javax.swing.JButton attackTarget5;
    public static javax.swing.JButton attackTarget6;
    private javax.swing.JButton attack_button;
    private javax.swing.JButton confirm_button;
    private javax.swing.JLabel dateCorner_label;
    private javax.swing.JButton decrease_button;
    private javax.swing.JButton decrease_button1;
    private javax.swing.JButton endTurn_button;
    private javax.swing.JButton increase_button;
    private javax.swing.JButton increase_button1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    public static javax.swing.JButton moveTarget1;
    public static javax.swing.JButton moveTarget2;
    public static javax.swing.JButton moveTarget3;
    public static javax.swing.JButton moveTarget4;
    public static javax.swing.JButton moveTarget5;
    public static javax.swing.JButton moveTarget6;
    private javax.swing.JLabel moveTargetLabel;
    private javax.swing.JButton move_button;
    public static javax.swing.JLabel owner_text;
    private javax.swing.JLabel recruitTroopNum_text;
    private javax.swing.JLabel recruitTroopNum_text1;
    private javax.swing.JButton recruit_button;
    public static javax.swing.JLabel troopsOnLand_text;
    private javax.swing.JLabel warning1;
    private javax.swing.JLabel warning2;
    private javax.swing.JLabel warning3;
    private javax.swing.JLabel warning4;
    // End of variables declaration//GEN-END:variables
}
